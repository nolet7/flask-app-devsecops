---
name: Epic4_Deployment_and_DAST

# Trigger manually or on successful release
on:
  workflow_dispatch:

jobs:
  # Deploy application to target environment (self-hosted VM assumed)
  deploy:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Load image from artifact
        uses: actions/download-artifact@v4
        with:
          name: flask-app-image
      - name: Load Docker image
        run: docker load -i flask-app.tar
      - name: Stop existing container (if running)
        run: |
          docker ps -q --filter "name=flask-app" | grep -q . && docker stop flask-app || echo "No running container."
      - name: Remove existing container (if exists)
        run: |
          docker ps -aq --filter "name=flask-app" | grep -q . && docker rm flask-app || echo "No container to remove."
      - name: Run flask-app container
        run: |
          docker run -d \
            --name flask-app \
            -e APP_SECRET_KEY=prod-secret \
            -e APP_USERNAME=admin \
            -e APP_PASSWORD=adminpass \
            -p 5000:5000 \
            flask-app:latest

  # DAST Scan after deployment
  dast:
    runs-on: self-hosted
    needs: deploy
    steps:
      - name: Create writable directory for ZAP reports
        run: mkdir -p zap-results && chmod 777 zap-results
      - name: Run ZAP Baseline Scan on deployed app
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: "http://localhost:5000/login"
          fail_action: false
          docker_name: "ghcr.io/zaproxy/zaproxy:stable"
          cmd_options: >
            -a -J zap-results/report_json.json
                -w zap-results/report_md.md
                -r zap-results/report_html.html
      - name: Upload ZAP HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report-html
          path: zap-results/report_html.html
