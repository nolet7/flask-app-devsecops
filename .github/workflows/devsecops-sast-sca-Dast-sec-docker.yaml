---
name: DevSecops_CI_Pipeline_Full

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Flake8
        run: pip install flake8
      - name: Create Flake8 Config
        run: |
          echo "[flake8]" > .flake8
          echo "max-line-length = 120" >> .flake8
          echo "exclude = __init__.py" >> .flake8
      - name: Run lint
        run: |
          if [ -f .flake8 ]; then
            flake8 --config=.flake8 flask-app/*.py
          else
            echo "Flake8 config not found!" && exit 1
          fi

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install test dependencies only
        run: |
          pip install flask pytest python-dotenv
      - name: Run unit tests
        run: PYTHONPATH=./flask-app pytest flask-app/tests/

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t flask-app:latest ./flask-app

  docker_push:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Tag and Push Docker image
        run: |
          docker tag flask-app:latest ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

  sast:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Bandit
        run: pip install bandit
      - name: Run Bandit for SAST
        run: bandit -r flask-app

  sca:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pip-audit
        run: pip install pip-audit
      - name: Run pip-audit for SCA
        run: pip-audit -r flask-app/requirements.txt

  dast:
    runs-on: ubuntu-latest
    steps:
      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: "http://192.168.0.191:5000/login"
          fail_action: false
          docker_name: "ghcr.io/zaproxy/zaproxy:stable"
          cmd_options: "-a"
